
#! git ====================

	>> windows 设置提交
	git config --global core.autocrlf false
	git config --global core.safecrlf true
	
	>> 下载代码
	git clone ...
	git clone http://ip/url
	
	>> 切换分支
	git branch -a
	git checkout -b v1.0.0 origin/v1.0.0
	
	>> 更新最新代码
	git pull
	
	>> 提交代码
	git add .
	git status
	git commit -m "修改说明"
	git push
	
	>> 恢复文件的修改内容
	git checkout -- filepath/filename

	
#! java lib ==================== 		

	>> 集合判断
	CollectionUtils.isEmpty(collection);
	
	>> 切面测试工具类
	Object o = AopTestUtils.getTargetObject(aopObject);
	ReflectionTestUtils.setField(object, "fieldName", fieldObject);

	>> 复制对象属性
	BeanUtils.copyProperties();
	
	>> 常用类
	org.springframework.util
	
	>> 常用名词
	invoke 激发（某种行动）
	interval 间隔


#! arthas command ==================== 	

	>> debug时，查询类变量当时的取值
	watch com.xxx.biz.impl.Cache getCache '{target, target.CacheManager}' -x 2
	
	>> debug时，条件变量为：类函数调用/变量的特定值
	watch com.xxx.biz.impl.Cache getCache '{target, target.CacheManager}' -x 2 'target.getCacheName()="tmpCache"'
	
	>> debug时，条件变量为：类的特定子类
	watch com.xxx.biz.impl.Cache getCache '{target, target.CacheManager}' -x 2 'target.getClass().name="com.xxx.biz.impl.TmpCache"'

	>> debug时，条件变量的 and 链接
	watch com.xxx.biz.impl.Cache getCache '{target, target.CacheManager}' -x 2 'target.getClass().name="com.xxx.biz.impl.TmpCache" and #cost>2'
	
	
#! windows command ==================== 	

	>> 截图工具
	snippingtool
	
	>> 计算器
	calc
	

#! linux command ==================== 	

	>> 日期转秒
	date -d "2021-05-12 17:02:12" +%s
	
	>> 日期转天
	date -d "2021-05-12 17:02:12" +%j
	
	>> 秒转为日期
	date -d@1606665600 +"%Y-%m-%d %H:%M:%S"

	>> 查询进程使用的文件
	lsof -p ${proc_id}
	
	>> tcpdump网络抓包
	tcpdump -n -i eth2 host 192.168.0.1 and 192.168.0.57 and udp port 7080
	tcpdump -A -nn tcp port 8000
	
	
#! shell demo ==================== 	
	
	>> 模拟终端输入方式1
	echo "yes" | proc1
	
	>> 模拟终端输入方式2
	ssh root@ip_address - tt <<EOF
		ls
		echo "hello world"
	EOF
	
	>> 比较文件并获取差异内容
	sort ${first_file} ${second_file} | uniq -u > ${compare_result_file}
	
	>> 替换文本中的时间内容（正则表达式替换）
	echo ',"time":"2020-02-23_19:33:12",' | sed 's/2020-02-23_19:\([0-9]*:[0-9]*\)/a/g'
	sed -i 's/2020-02-23_\([0-9]*:[0-9]*:[0-9]*\)/yyyy-mm-dd_hh:mi:ss/g' temp.dat